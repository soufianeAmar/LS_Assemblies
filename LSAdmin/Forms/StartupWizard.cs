using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Drawing;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace ChequeAdmin.Module
{
    public partial class StartupWizard : Form
    {
        public string country
        {
            get { return (string)gleCountry.EditValue; }
        }
        public bool cancelled = true;
        public string companyName
        {
            get { return teRaisonSociale.Text; }
        }
        public string state
        {
            get { return teEtat.Text; }
        }
        public string address1
        {
            get { return teAdresse1.Text; }
        }
        public string address2
        {
            get { return teAdresse2.Text; }
        }
        public string phone
        {
            get { return teTelephone.Text; }
        }
        public string fax
        {
            get { return teFax.Text; }
        }
        public string email
        {
            get { return teEMail.Text; }
        }
        public DataTable accountTable;
        public string defaultAccount
        {
            get { return (string)gleAccount.EditValue; }
        }
        public string place
        {
            get { return tePlace.Text; }
        }
        public string printFormat
        {
            get { return (string)glePrintFormat.EditValue; }
        }

        public DataTable currencyTable;
        public DataTable countryTable;
        public DataTable bankTable;
        public DataTable printFormatTable;

        public StartupWizard()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Create a new DataSet
            DataSet xmlDataSet = new DataSet("icConfig");
            // Load the XML document to the DataSet
            try
            {
                xmlDataSet.ReadXml(Assembly.GetAssembly(this.GetType()).GetManifestResourceStream("ChequeAdmin.Module.DefaultDataIC.xml"));
                // Initializing the default data tables
                currencyTable = xmlDataSet.Tables["currency"];
                countryTable = xmlDataSet.Tables["country"];
                bankTable = xmlDataSet.Tables["bank"];
                printFormatTable = xmlDataSet.Tables["printFormat"];

                countryTable.PrimaryKey = new DataColumn[] { countryTable.Columns["iso3Id"] };
                // This line of code is generated by Data Source Configuration Wizard
                gleCountry.Properties.DataSource = countryTable;
                DataRow drAlgeria = countryTable.Rows.Find("DZA");
                if (drAlgeria != null)
                    gleCountry.EditValue = drAlgeria["iso3Id"];
                accountTable = new DataTable("accounts");
                accountTable.Columns.Add("bankId", typeof(string));
                accountTable.Columns.Add("accountNumber", typeof(string));
                accountTable.RowDeleted += accountTable_RowCountChanged;
                accountTable.RowChanged += accountTable_RowCountChanged;
                gcAccounts.DataSource = accountTable;
                gleAccount.Properties.DataSource = accountTable;
                printFormatTable.PrimaryKey = new DataColumn[] { printFormatTable.Columns["position"] };
                glePrintFormat.Properties.DataSource = printFormatTable;
                DataRow drPaysageCentre = printFormatTable.Rows.Find("PAYSAGE CENTRE");
                if (drPaysageCentre != null)
                    glePrintFormat.EditValue = drPaysageCentre["position"];

                wpCountry.AllowNext = gleCountry.EditValue != null;
                wpMyInformations.AllowNext = !string.IsNullOrEmpty(teRaisonSociale.Text);
                wpAccounts.AllowNext = accountTable.Rows.Count > 0;
                wpPrintSettings.AllowNext = (gleAccount.EditValue != null) && (!string.IsNullOrEmpty(tePlace.Text));
            }
            catch (Exception ex)
            {
                Trace.WriteLine(string.Format("{0:dd.MM.yy hh:mm:sss.fff}\tError loading default data : {1}", DateTime.Now, ex.Message));
            }
        }

        void accountTable_RowCountChanged(object sender, DataRowChangeEventArgs e)
        {
            wpAccounts.AllowNext = accountTable.Rows.Count > 0;
        }

        private void gleCountry_EditValueChanged(object sender, EventArgs e)
        {
            wpCountry.AllowNext = gleCountry.EditValue != null;
            DataTable dt = (DataTable)gleCountry.Properties.DataSource;
            DataRow dr = dt.Rows.Find(gleCountry.EditValue);
            if (dr != null)
            {
                lcOfficialName.Text = dr["officialName"].ToString();
                peFlag.EditValue = dr["flag"];
            }
            else
            {
                lcOfficialName.Text = string.Empty;
                peFlag.EditValue = null;
            }
        }

        private void wizardControl1_FinishClick(object sender, CancelEventArgs e)
        {
            cancelled = false;
        }

        private void wizardControl1_NextClick(object sender, DevExpress.XtraWizard.WizardCommandButtonClickEventArgs e)
        {
            switch (wizardControl1.SelectedPageIndex)
            {
                case 1: // wpCountry
                    {
                        DataRow[] rows = bankTable.Select(string.Format("countryId = '{0}'", gleCountry.EditValue));
                        if (rows.Length > 0)
                            bankRepositoryItemEdit.DataSource = rows.CopyToDataTable<DataRow>();
                        else
                            bankRepositoryItemEdit.DataSource = null;
                        break;
                    }
                case 3: // wpAccounts
                    {
                        if (accountTable.Rows.Count > 0)
                            gleAccount.EditValue = accountTable.Rows[0]["accountNumber"];
                        break;
                    }
                default:
                    break;
            }
        }

        private void teRaisonSociale_EditValueChanged(object sender, EventArgs e)
        {
            wpMyInformations.AllowNext = !string.IsNullOrEmpty(teRaisonSociale.Text);
        }

        private void glePrintFormat_EditValueChanged(object sender, EventArgs e)
        {
            DataTable dt = (DataTable)glePrintFormat.Properties.DataSource;
            DataRow dr = dt.Rows.Find(glePrintFormat.EditValue);
            if (dr != null)
            {
                pePrintFormat.EditValue = dr["image"];
            }
            else
            {
                peFlag.EditValue = null;
            }
        }

        private void gleAccount_EditValueChanged(object sender, EventArgs e)
        {
            wpPrintSettings.AllowNext = (gleAccount.EditValue != null) && (!string.IsNullOrEmpty(tePlace.Text));
        }

        private void tePlace_EditValueChanged(object sender, EventArgs e)
        {
            wpPrintSettings.AllowNext = (gleAccount.EditValue != null) && (!string.IsNullOrEmpty(tePlace.Text));
        }

    }
}
